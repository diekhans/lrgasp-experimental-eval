#!/usr/bin/env python3

import sys
from os import path as osp
import argparse
from pycbio.sys import fileOps
from pycbio.tsv import TsvReader

def parseArgs():
    desc = """get stats on alignment to transcriptome"""
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument("statsTsvs", nargs='+',
                        help="""output statistics to analyze""")
    return parser.parse_args()

def floatOrNone(v):
    return float(v) if v != "" else None

def intOrNone(v):
    return int(v) if v != "" else None

def countStats(statsTsv, fh):
    typeMap = {"minIndelBaseRate": floatOrNone,
               "filter_maxIndelBaseRate": floatOrNone,
               "target": str
    }
    recs = [r for r in TsvReader(statsTsv, typeMap=typeMap, defaultColType=intOrNone)]
    rec0 = recs[0]

    numSupported = len([r for r in recs if r.numSupports > 0])
    fileOps.prRowv(fh, statsTsv, rec0.filter_maxEndsDiff, rec0.filter_maxIndelBases, rec0.filter_maxIndelBaseRate,
                   numSupported, len(recs))

def transcriptomeSummary(statsTsvs):
    fh = sys.stdout
    fileOps.prRowv(fh, "resultsFile", "filter_maxEndsDiff", "filter_maxIndelBases", "filter_maxIndelBaseRate", "numSupported", "numTargets")
    for statsTsv in statsTsvs:
        countStats(statsTsv, fh)


def main(opts):
    transcriptomeSummary(opts.statsTsvs)

main(parseArgs())
